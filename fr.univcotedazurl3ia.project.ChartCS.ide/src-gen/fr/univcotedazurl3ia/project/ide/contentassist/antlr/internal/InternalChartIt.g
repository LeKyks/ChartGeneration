/*
 * generated by Xtext 2.25.0
 */
grammar InternalChartIt;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.univcotedazurl3ia.project.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.univcotedazurl3ia.project.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.univcotedazurl3ia.project.services.ChartItGrammarAccess;

}
@parser::members {
	private ChartItGrammarAccess grammarAccess;

	public void setGrammarAccess(ChartItGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getGroup()); }
		(rule__Data__Group__0)
		{ after(grammarAccess.getDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChart
entryRuleChart
:
{ before(grammarAccess.getChartRule()); }
	 ruleChart
{ after(grammarAccess.getChartRule()); } 
	 EOF 
;

// Rule Chart
ruleChart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChartAccess().getGroup()); }
		(rule__Chart__Group__0)
		{ after(grammarAccess.getChartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCol
entryRuleCol
:
{ before(grammarAccess.getColRule()); }
	 ruleCol
{ after(grammarAccess.getColRule()); } 
	 EOF 
;

// Rule Col
ruleCol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColAccess().getGroup()); }
		(rule__Col__Group__0)
		{ after(grammarAccess.getColAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Color
ruleColor
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ChartType
ruleChartType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartTypeAccess().getAlternatives()); }
		(rule__ChartType__Alternatives)
		{ after(grammarAccess.getChartTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_0()); }
		('Blue')
		{ after(grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_1()); }
		('Red')
		{ after(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_2()); }
		('Green')
		{ after(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_3()); }
		('Orange')
		{ after(grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_4()); }
		('Yellow')
		{ after(grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_5()); }
		('Purple')
		{ after(grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_6()); }
		('Black')
		{ after(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_7()); }
		('Brown')
		{ after(grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_8()); }
		('Pink')
		{ after(grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkGreyEnumLiteralDeclaration_9()); }
		('Darkgrey')
		{ after(grammarAccess.getColorAccess().getDarkGreyEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightGreyEnumLiteralDeclaration_10()); }
		('LightGrey')
		{ after(grammarAccess.getColorAccess().getLightGreyEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_11()); }
		('White')
		{ after(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChartType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartTypeAccess().getPieEnumLiteralDeclaration_0()); }
		('Pie')
		{ after(grammarAccess.getChartTypeAccess().getPieEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getBarEnumLiteralDeclaration_1()); }
		('Bar')
		{ after(grammarAccess.getChartTypeAccess().getBarEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getAreaEnumLiteralDeclaration_2()); }
		('Area')
		{ after(grammarAccess.getChartTypeAccess().getAreaEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getBubbleEnumLiteralDeclaration_3()); }
		('Bubble')
		{ after(grammarAccess.getChartTypeAccess().getBubbleEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getLineEnumLiteralDeclaration_4()); }
		('Line')
		{ after(grammarAccess.getChartTypeAccess().getLineEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
	()
	{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getPKeyword_1()); }
	'P'
	{ after(grammarAccess.getProgramAccess().getPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getProgramAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_3()); }
	(rule__Program__NameAssignment_3)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLoadDataKeyword_5()); }
	'loadData'
	{ after(grammarAccess.getProgramAccess().getLoadDataKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__6__Impl
	rule__Program__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__7__Impl
	rule__Program__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getLoadDataAssignment_7()); }
		(rule__Program__LoadDataAssignment_7)
		{ after(grammarAccess.getProgramAccess().getLoadDataAssignment_7()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getLoadDataAssignment_7()); }
		(rule__Program__LoadDataAssignment_7)*
		{ after(grammarAccess.getProgramAccess().getLoadDataAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__8__Impl
	rule__Program__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_8()); }
	(rule__Program__Group_8__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__9__Impl
	rule__Program__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__10__Impl
	rule__Program__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getColKeyword_10()); }
	'col'
	{ after(grammarAccess.getProgramAccess().getColKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__11__Impl
	rule__Program__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_11()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__12__Impl
	rule__Program__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getColAssignment_12()); }
		(rule__Program__ColAssignment_12)
		{ after(grammarAccess.getProgramAccess().getColAssignment_12()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getColAssignment_12()); }
		(rule__Program__ColAssignment_12)*
		{ after(grammarAccess.getProgramAccess().getColAssignment_12()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__13__Impl
	rule__Program__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_13()); }
	(rule__Program__Group_13__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__14__Impl
	rule__Program__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__15__Impl
	rule__Program__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getChartKeyword_15()); }
	'chart'
	{ after(grammarAccess.getProgramAccess().getChartKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__16__Impl
	rule__Program__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_16()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__17__Impl
	rule__Program__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getChartAssignment_17()); }
		(rule__Program__ChartAssignment_17)
		{ after(grammarAccess.getProgramAccess().getChartAssignment_17()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getChartAssignment_17()); }
		(rule__Program__ChartAssignment_17)*
		{ after(grammarAccess.getProgramAccess().getChartAssignment_17()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__18__Impl
	rule__Program__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_18()); }
	(rule__Program__Group_18__0)*
	{ after(grammarAccess.getProgramAccess().getGroup_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__19__Impl
	rule__Program__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_19()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_20()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__0__Impl
	rule__Program__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getProgramAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLoadDataAssignment_8_1()); }
	(rule__Program__LoadDataAssignment_8_1)
	{ after(grammarAccess.getProgramAccess().getLoadDataAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_13__0__Impl
	rule__Program__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCommaKeyword_13_0()); }
	','
	{ after(grammarAccess.getProgramAccess().getCommaKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getColAssignment_13_1()); }
	(rule__Program__ColAssignment_13_1)
	{ after(grammarAccess.getProgramAccess().getColAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_18__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_18__0__Impl
	rule__Program__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_18__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCommaKeyword_18_0()); }
	','
	{ after(grammarAccess.getProgramAccess().getCommaKeyword_18_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_18__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_18__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_18__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getChartAssignment_18_1()); }
	(rule__Program__ChartAssignment_18_1)
	{ after(grammarAccess.getProgramAccess().getChartAssignment_18_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getDataAction_0()); }
	()
	{ after(grammarAccess.getDataAccess().getDataAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getNameAssignment_1()); }
	(rule__Data__NameAssignment_1)
	{ after(grammarAccess.getDataAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__2__Impl
	rule__Data__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDataAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__3__Impl
	rule__Data__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getPathAssignment_3()); }
	(rule__Data__PathAssignment_3)
	{ after(grammarAccess.getDataAccess().getPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDataAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__0__Impl
	rule__Chart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getChartAction_0()); }
	()
	{ after(grammarAccess.getChartAccess().getChartAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__1__Impl
	rule__Chart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getNameAssignment_1()); }
	(rule__Chart__NameAssignment_1)
	{ after(grammarAccess.getChartAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__2__Impl
	rule__Chart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getChartAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__3__Impl
	rule__Chart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getDataKeyword_3()); }
	'data'
	{ after(grammarAccess.getChartAccess().getDataKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__4__Impl
	rule__Chart__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getChartAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__5__Impl
	rule__Chart__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getDataAssignment_5()); }
	(rule__Chart__DataAssignment_5)
	{ after(grammarAccess.getChartAccess().getDataAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__6__Impl
	rule__Chart__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getChartAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__7__Impl
	rule__Chart__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getTypeKeyword_7()); }
	'type'
	{ after(grammarAccess.getChartAccess().getTypeKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__8__Impl
	rule__Chart__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getEqualsSignKeyword_8()); }
	'='
	{ after(grammarAccess.getChartAccess().getEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__9__Impl
	rule__Chart__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getTypeAssignment_9()); }
	(rule__Chart__TypeAssignment_9)
	{ after(grammarAccess.getChartAccess().getTypeAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__10__Impl
	rule__Chart__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getCommaKeyword_10()); }
	','
	{ after(grammarAccess.getChartAccess().getCommaKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__11__Impl
	rule__Chart__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getColKeyword_11()); }
	'col'
	{ after(grammarAccess.getChartAccess().getColKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__12__Impl
	rule__Chart__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getEqualsSignKeyword_12()); }
	'='
	{ after(grammarAccess.getChartAccess().getEqualsSignKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__13__Impl
	rule__Chart__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getColAssignment_13()); }
	(rule__Chart__ColAssignment_13)
	{ after(grammarAccess.getChartAccess().getColAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__14__Impl
	rule__Chart__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getGroup_14()); }
	(rule__Chart__Group_14__0)*
	{ after(grammarAccess.getChartAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__15__Impl
	rule__Chart__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getCommaKeyword_15()); }
	','
	{ after(grammarAccess.getChartAccess().getCommaKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__16__Impl
	rule__Chart__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getBackgroundColorKeyword_16()); }
	'backgroundColor'
	{ after(grammarAccess.getChartAccess().getBackgroundColorKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__17__Impl
	rule__Chart__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getEqualsSignKeyword_17()); }
	'='
	{ after(grammarAccess.getChartAccess().getEqualsSignKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__18__Impl
	rule__Chart__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getBackgroundColorAssignment_18()); }
	(rule__Chart__BackgroundColorAssignment_18)
	{ after(grammarAccess.getChartAccess().getBackgroundColorAssignment_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__19__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getRightParenthesisKeyword_19()); }
	')'
	{ after(grammarAccess.getChartAccess().getRightParenthesisKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_14__0__Impl
	rule__Chart__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getCommaKeyword_14_0()); }
	','
	{ after(grammarAccess.getChartAccess().getCommaKeyword_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getColAssignment_14_1()); }
	(rule__Chart__ColAssignment_14_1)
	{ after(grammarAccess.getChartAccess().getColAssignment_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Col__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__0__Impl
	rule__Col__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getColAction_0()); }
	()
	{ after(grammarAccess.getColAccess().getColAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__1__Impl
	rule__Col__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getNameAssignment_1()); }
	(rule__Col__NameAssignment_1)
	{ after(grammarAccess.getColAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__2__Impl
	rule__Col__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getColAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__3__Impl
	rule__Col__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getLabelKeyword_3()); }
	'label'
	{ after(grammarAccess.getColAccess().getLabelKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__4__Impl
	rule__Col__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getColAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__5__Impl
	rule__Col__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getLabelAssignment_5()); }
	(rule__Col__LabelAssignment_5)
	{ after(grammarAccess.getColAccess().getLabelAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__6__Impl
	rule__Col__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getColAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__7__Impl
	rule__Col__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getColorKeyword_7()); }
	'color'
	{ after(grammarAccess.getColAccess().getColorKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__8__Impl
	rule__Col__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getEqualsSignKeyword_8()); }
	'='
	{ after(grammarAccess.getColAccess().getEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__9__Impl
	rule__Col__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getColorAssignment_9()); }
	(rule__Col__ColorAssignment_9)
	{ after(grammarAccess.getColAccess().getColorAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getColAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getProgramAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__LoadDataAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getLoadDataDataParserRuleCall_7_0()); }
		ruleData
		{ after(grammarAccess.getProgramAccess().getLoadDataDataParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__LoadDataAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getLoadDataDataParserRuleCall_8_1_0()); }
		ruleData
		{ after(grammarAccess.getProgramAccess().getLoadDataDataParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ColAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getColColParserRuleCall_12_0()); }
		ruleCol
		{ after(grammarAccess.getProgramAccess().getColColParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ColAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getColColParserRuleCall_13_1_0()); }
		ruleCol
		{ after(grammarAccess.getProgramAccess().getColColParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ChartAssignment_17
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getChartChartParserRuleCall_17_0()); }
		ruleChart
		{ after(grammarAccess.getProgramAccess().getChartChartParserRuleCall_17_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ChartAssignment_18_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getChartChartParserRuleCall_18_1_0()); }
		ruleChart
		{ after(grammarAccess.getProgramAccess().getChartChartParserRuleCall_18_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDataAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__PathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getPathSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDataAccess().getPathSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getChartAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__DataAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getDataDataCrossReference_5_0()); }
		(
			{ before(grammarAccess.getChartAccess().getDataDataSTRINGTerminalRuleCall_5_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getChartAccess().getDataDataSTRINGTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getChartAccess().getDataDataCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__TypeAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getTypeChartTypeEnumRuleCall_9_0()); }
		ruleChartType
		{ after(grammarAccess.getChartAccess().getTypeChartTypeEnumRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__ColAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getColColCrossReference_13_0()); }
		(
			{ before(grammarAccess.getChartAccess().getColColSTRINGTerminalRuleCall_13_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getChartAccess().getColColSTRINGTerminalRuleCall_13_0_1()); }
		)
		{ after(grammarAccess.getChartAccess().getColColCrossReference_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__ColAssignment_14_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getColColCrossReference_14_1_0()); }
		(
			{ before(grammarAccess.getChartAccess().getColColSTRINGTerminalRuleCall_14_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getChartAccess().getColColSTRINGTerminalRuleCall_14_1_0_1()); }
		)
		{ after(grammarAccess.getChartAccess().getColColCrossReference_14_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__BackgroundColorAssignment_18
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getBackgroundColorColorEnumRuleCall_18_0()); }
		ruleColor
		{ after(grammarAccess.getChartAccess().getBackgroundColorColorEnumRuleCall_18_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getColAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__LabelAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getLabelSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getColAccess().getLabelSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__ColorAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getColorColorEnumRuleCall_9_0()); }
		ruleColor
		{ after(grammarAccess.getColAccess().getColorColorEnumRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
