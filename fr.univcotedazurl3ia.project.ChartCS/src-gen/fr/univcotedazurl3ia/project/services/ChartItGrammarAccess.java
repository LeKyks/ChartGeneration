/*
 * generated by Xtext 2.25.0
 */
package fr.univcotedazurl3ia.project.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ChartItGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazurl3ia.project.ChartIt.Program");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProgramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLoadDataKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLoadDataAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLoadDataDataParserRuleCall_7_0 = (RuleCall)cLoadDataAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cLoadDataAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cLoadDataDataParserRuleCall_8_1_0 = (RuleCall)cLoadDataAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cColAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cColColParserRuleCall_12_0 = (RuleCall)cColAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cColAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cColColParserRuleCall_13_1_0 = (RuleCall)cColAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cChartKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cChartAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cChartChartParserRuleCall_17_0 = (RuleCall)cChartAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cChartAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cChartChartParserRuleCall_18_1_0 = (RuleCall)cChartAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//Program returns Program:
		//    {Program}
		//    'P' ':' name=STRING
		//    '{'
		//        'loadData' '{' loadData+=Data + ( "," loadData+=Data)*'}'
		//        'col' '{' col+=Col + ( "," col+=Col)* '}'
		//        'chart' '{' chart+=Chart +( "," chart+=Chart)*'}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Program}
		//'P' ':' name=STRING
		//'{'
		//    'loadData' '{' loadData+=Data + ( "," loadData+=Data)*'}'
		//    'col' '{' col+=Col + ( "," col+=Col)* '}'
		//    'chart' '{' chart+=Chart +( "," chart+=Chart)*'}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Program}
		public Action getProgramAction_0() { return cProgramAction_0; }
		
		//'P'
		public Keyword getPKeyword_1() { return cPKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'loadData'
		public Keyword getLoadDataKeyword_5() { return cLoadDataKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//loadData+=Data +
		public Assignment getLoadDataAssignment_7() { return cLoadDataAssignment_7; }
		
		//Data
		public RuleCall getLoadDataDataParserRuleCall_7_0() { return cLoadDataDataParserRuleCall_7_0; }
		
		//( "," loadData+=Data)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//loadData+=Data
		public Assignment getLoadDataAssignment_8_1() { return cLoadDataAssignment_8_1; }
		
		//Data
		public RuleCall getLoadDataDataParserRuleCall_8_1_0() { return cLoadDataDataParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'col'
		public Keyword getColKeyword_10() { return cColKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//col+=Col +
		public Assignment getColAssignment_12() { return cColAssignment_12; }
		
		//Col
		public RuleCall getColColParserRuleCall_12_0() { return cColColParserRuleCall_12_0; }
		
		//( "," col+=Col)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//col+=Col
		public Assignment getColAssignment_13_1() { return cColAssignment_13_1; }
		
		//Col
		public RuleCall getColColParserRuleCall_13_1_0() { return cColColParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'chart'
		public Keyword getChartKeyword_15() { return cChartKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//chart+=Chart +
		public Assignment getChartAssignment_17() { return cChartAssignment_17; }
		
		//Chart
		public RuleCall getChartChartParserRuleCall_17_0() { return cChartChartParserRuleCall_17_0; }
		
		//( "," chart+=Chart)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//chart+=Chart
		public Assignment getChartAssignment_18_1() { return cChartAssignment_18_1; }
		
		//Chart
		public RuleCall getChartChartParserRuleCall_18_1_0() { return cChartChartParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazurl3ia.project.ChartIt.Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSTRINGTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Data returns Data:
		//    {Data}
		//    name=STRING '(' path=STRING ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Data}
		//name=STRING '(' path=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//{Data}
		public Action getDataAction_0() { return cDataAction_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//path=STRING
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_3_0() { return cPathSTRINGTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ChartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazurl3ia.project.ChartIt.Chart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cChartAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDataKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDataAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cDataDataCrossReference_5_0 = (CrossReference)cDataAssignment_5.eContents().get(0);
		private final RuleCall cDataDataSTRINGTerminalRuleCall_5_0_1 = (RuleCall)cDataDataCrossReference_5_0.eContents().get(1);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTypeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTypeChartTypeEnumRuleCall_9_0 = (RuleCall)cTypeAssignment_9.eContents().get(0);
		private final Keyword cCommaKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cColAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final CrossReference cColColCrossReference_13_0 = (CrossReference)cColAssignment_13.eContents().get(0);
		private final RuleCall cColColSTRINGTerminalRuleCall_13_0_1 = (RuleCall)cColColCrossReference_13_0.eContents().get(1);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cCommaKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cColAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final CrossReference cColColCrossReference_14_1_0 = (CrossReference)cColAssignment_14_1.eContents().get(0);
		private final RuleCall cColColSTRINGTerminalRuleCall_14_1_0_1 = (RuleCall)cColColCrossReference_14_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cBackgroundColorKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cEqualsSignKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cBackgroundColorAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cBackgroundColorColorEnumRuleCall_18_0 = (RuleCall)cBackgroundColorAssignment_18.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Chart returns Chart:
		//    {Chart}
		//    name=STRING '(' 'data' '=' data=[Data|STRING]',' 'type' '=' type=ChartType ',' 'col' '=' col+=[Col|STRING] (',' col+=[Col|STRING])* ',' 'backgroundColor' '=' backgroundColor=Color')' ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Chart}
		//name=STRING '(' 'data' '=' data=[Data|STRING]',' 'type' '=' type=ChartType ',' 'col' '=' col+=[Col|STRING] (',' col+=[Col|STRING])* ',' 'backgroundColor' '=' backgroundColor=Color')'
		public Group getGroup() { return cGroup; }
		
		//{Chart}
		public Action getChartAction_0() { return cChartAction_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//'data'
		public Keyword getDataKeyword_3() { return cDataKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//data=[Data|STRING]
		public Assignment getDataAssignment_5() { return cDataAssignment_5; }
		
		//[Data|STRING]
		public CrossReference getDataDataCrossReference_5_0() { return cDataDataCrossReference_5_0; }
		
		//STRING
		public RuleCall getDataDataSTRINGTerminalRuleCall_5_0_1() { return cDataDataSTRINGTerminalRuleCall_5_0_1; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'type'
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }
		
		//'='
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }
		
		//type=ChartType
		public Assignment getTypeAssignment_9() { return cTypeAssignment_9; }
		
		//ChartType
		public RuleCall getTypeChartTypeEnumRuleCall_9_0() { return cTypeChartTypeEnumRuleCall_9_0; }
		
		//','
		public Keyword getCommaKeyword_10() { return cCommaKeyword_10; }
		
		//'col'
		public Keyword getColKeyword_11() { return cColKeyword_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }
		
		//col+=[Col|STRING]
		public Assignment getColAssignment_13() { return cColAssignment_13; }
		
		//[Col|STRING]
		public CrossReference getColColCrossReference_13_0() { return cColColCrossReference_13_0; }
		
		//STRING
		public RuleCall getColColSTRINGTerminalRuleCall_13_0_1() { return cColColSTRINGTerminalRuleCall_13_0_1; }
		
		//(',' col+=[Col|STRING])*
		public Group getGroup_14() { return cGroup_14; }
		
		//','
		public Keyword getCommaKeyword_14_0() { return cCommaKeyword_14_0; }
		
		//col+=[Col|STRING]
		public Assignment getColAssignment_14_1() { return cColAssignment_14_1; }
		
		//[Col|STRING]
		public CrossReference getColColCrossReference_14_1_0() { return cColColCrossReference_14_1_0; }
		
		//STRING
		public RuleCall getColColSTRINGTerminalRuleCall_14_1_0_1() { return cColColSTRINGTerminalRuleCall_14_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_15() { return cCommaKeyword_15; }
		
		//'backgroundColor'
		public Keyword getBackgroundColorKeyword_16() { return cBackgroundColorKeyword_16; }
		
		//'='
		public Keyword getEqualsSignKeyword_17() { return cEqualsSignKeyword_17; }
		
		//backgroundColor=Color
		public Assignment getBackgroundColorAssignment_18() { return cBackgroundColorAssignment_18; }
		
		//Color
		public RuleCall getBackgroundColorColorEnumRuleCall_18_0() { return cBackgroundColorColorEnumRuleCall_18_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_19() { return cRightParenthesisKeyword_19; }
	}
	public class ColElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazurl3ia.project.ChartIt.Col");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cColAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLabelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLabelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLabelSTRINGTerminalRuleCall_5_0 = (RuleCall)cLabelAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColorKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cColorAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cColorColorEnumRuleCall_9_0 = (RuleCall)cColorAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Col returns Col:
		//    {Col}
		//    name=STRING '(' 'label' '=' label=STRING ',' 'color' '=' color=Color ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Col}
		//name=STRING '(' 'label' '=' label=STRING ',' 'color' '=' color=Color ')'
		public Group getGroup() { return cGroup; }
		
		//{Col}
		public Action getColAction_0() { return cColAction_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//'label'
		public Keyword getLabelKeyword_3() { return cLabelKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//label=STRING
		public Assignment getLabelAssignment_5() { return cLabelAssignment_5; }
		
		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_5_0() { return cLabelSTRINGTerminalRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'color'
		public Keyword getColorKeyword_7() { return cColorKeyword_7; }
		
		//'='
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }
		
		//color=Color
		public Assignment getColorAssignment_9() { return cColorAssignment_9; }
		
		//Color
		public RuleCall getColorColorEnumRuleCall_9_0() { return cColorColorEnumRuleCall_9_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}
	
	public class ColorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazurl3ia.project.ChartIt.Color");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBlueEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBlueBlueKeyword_0_0 = (Keyword)cBlueEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRedRedKeyword_1_0 = (Keyword)cRedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGreenEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGreenGreenKeyword_2_0 = (Keyword)cGreenEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cOrangeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cOrangeOrangeKeyword_3_0 = (Keyword)cOrangeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cYellowEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cYellowYellowKeyword_4_0 = (Keyword)cYellowEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPurpleEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPurplePurpleKeyword_5_0 = (Keyword)cPurpleEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBlackEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBlackBlackKeyword_6_0 = (Keyword)cBlackEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cBrownEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cBrownBrownKeyword_7_0 = (Keyword)cBrownEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cPinkEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cPinkPinkKeyword_8_0 = (Keyword)cPinkEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cDarkGreyEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cDarkGreyDarkgreyKeyword_9_0 = (Keyword)cDarkGreyEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cLightGreyEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cLightGreyLightGreyKeyword_10_0 = (Keyword)cLightGreyEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cWhiteEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cWhiteWhiteKeyword_11_0 = (Keyword)cWhiteEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum Color returns Color:
		//    Blue='Blue' | Red='Red' | Green='Green' | Orange='Orange' | Yellow='Yellow' | Purple='Purple' | Black='Black' | Brown='Brown' | Pink='Pink' | DarkGrey="Darkgrey" | LightGrey='LightGrey' | White='White';
		public EnumRule getRule() { return rule; }
		
		//Blue='Blue' | Red='Red' | Green='Green' | Orange='Orange' | Yellow='Yellow' | Purple='Purple' | Black='Black' | Brown='Brown' | Pink='Pink' | DarkGrey="Darkgrey" | LightGrey='LightGrey' | White='White'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Blue='Blue'
		public EnumLiteralDeclaration getBlueEnumLiteralDeclaration_0() { return cBlueEnumLiteralDeclaration_0; }
		
		//'Blue'
		public Keyword getBlueBlueKeyword_0_0() { return cBlueBlueKeyword_0_0; }
		
		//Red='Red'
		public EnumLiteralDeclaration getRedEnumLiteralDeclaration_1() { return cRedEnumLiteralDeclaration_1; }
		
		//'Red'
		public Keyword getRedRedKeyword_1_0() { return cRedRedKeyword_1_0; }
		
		//Green='Green'
		public EnumLiteralDeclaration getGreenEnumLiteralDeclaration_2() { return cGreenEnumLiteralDeclaration_2; }
		
		//'Green'
		public Keyword getGreenGreenKeyword_2_0() { return cGreenGreenKeyword_2_0; }
		
		//Orange='Orange'
		public EnumLiteralDeclaration getOrangeEnumLiteralDeclaration_3() { return cOrangeEnumLiteralDeclaration_3; }
		
		//'Orange'
		public Keyword getOrangeOrangeKeyword_3_0() { return cOrangeOrangeKeyword_3_0; }
		
		//Yellow='Yellow'
		public EnumLiteralDeclaration getYellowEnumLiteralDeclaration_4() { return cYellowEnumLiteralDeclaration_4; }
		
		//'Yellow'
		public Keyword getYellowYellowKeyword_4_0() { return cYellowYellowKeyword_4_0; }
		
		//Purple='Purple'
		public EnumLiteralDeclaration getPurpleEnumLiteralDeclaration_5() { return cPurpleEnumLiteralDeclaration_5; }
		
		//'Purple'
		public Keyword getPurplePurpleKeyword_5_0() { return cPurplePurpleKeyword_5_0; }
		
		//Black='Black'
		public EnumLiteralDeclaration getBlackEnumLiteralDeclaration_6() { return cBlackEnumLiteralDeclaration_6; }
		
		//'Black'
		public Keyword getBlackBlackKeyword_6_0() { return cBlackBlackKeyword_6_0; }
		
		//Brown='Brown'
		public EnumLiteralDeclaration getBrownEnumLiteralDeclaration_7() { return cBrownEnumLiteralDeclaration_7; }
		
		//'Brown'
		public Keyword getBrownBrownKeyword_7_0() { return cBrownBrownKeyword_7_0; }
		
		//Pink='Pink'
		public EnumLiteralDeclaration getPinkEnumLiteralDeclaration_8() { return cPinkEnumLiteralDeclaration_8; }
		
		//'Pink'
		public Keyword getPinkPinkKeyword_8_0() { return cPinkPinkKeyword_8_0; }
		
		//DarkGrey="Darkgrey"
		public EnumLiteralDeclaration getDarkGreyEnumLiteralDeclaration_9() { return cDarkGreyEnumLiteralDeclaration_9; }
		
		//"Darkgrey"
		public Keyword getDarkGreyDarkgreyKeyword_9_0() { return cDarkGreyDarkgreyKeyword_9_0; }
		
		//LightGrey='LightGrey'
		public EnumLiteralDeclaration getLightGreyEnumLiteralDeclaration_10() { return cLightGreyEnumLiteralDeclaration_10; }
		
		//'LightGrey'
		public Keyword getLightGreyLightGreyKeyword_10_0() { return cLightGreyLightGreyKeyword_10_0; }
		
		//White='White'
		public EnumLiteralDeclaration getWhiteEnumLiteralDeclaration_11() { return cWhiteEnumLiteralDeclaration_11; }
		
		//'White'
		public Keyword getWhiteWhiteKeyword_11_0() { return cWhiteWhiteKeyword_11_0; }
	}
	public class ChartTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.univcotedazurl3ia.project.ChartIt.ChartType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPieEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPiePieKeyword_0_0 = (Keyword)cPieEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBarEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBarBarKeyword_1_0 = (Keyword)cBarEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAreaEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAreaAreaKeyword_2_0 = (Keyword)cAreaEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBubbleEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBubbleBubbleKeyword_3_0 = (Keyword)cBubbleEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLineEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLineLineKeyword_4_0 = (Keyword)cLineEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum ChartType returns ChartType:
		//    Pie = 'Pie' | Bar = 'Bar' | Area = 'Area' | Bubble = 'Bubble' | Line = 'Line';
		public EnumRule getRule() { return rule; }
		
		//Pie = 'Pie' | Bar = 'Bar' | Area = 'Area' | Bubble = 'Bubble' | Line = 'Line'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Pie = 'Pie'
		public EnumLiteralDeclaration getPieEnumLiteralDeclaration_0() { return cPieEnumLiteralDeclaration_0; }
		
		//'Pie'
		public Keyword getPiePieKeyword_0_0() { return cPiePieKeyword_0_0; }
		
		//Bar = 'Bar'
		public EnumLiteralDeclaration getBarEnumLiteralDeclaration_1() { return cBarEnumLiteralDeclaration_1; }
		
		//'Bar'
		public Keyword getBarBarKeyword_1_0() { return cBarBarKeyword_1_0; }
		
		//Area = 'Area'
		public EnumLiteralDeclaration getAreaEnumLiteralDeclaration_2() { return cAreaEnumLiteralDeclaration_2; }
		
		//'Area'
		public Keyword getAreaAreaKeyword_2_0() { return cAreaAreaKeyword_2_0; }
		
		//Bubble = 'Bubble'
		public EnumLiteralDeclaration getBubbleEnumLiteralDeclaration_3() { return cBubbleEnumLiteralDeclaration_3; }
		
		//'Bubble'
		public Keyword getBubbleBubbleKeyword_3_0() { return cBubbleBubbleKeyword_3_0; }
		
		//Line = 'Line'
		public EnumLiteralDeclaration getLineEnumLiteralDeclaration_4() { return cLineEnumLiteralDeclaration_4; }
		
		//'Line'
		public Keyword getLineLineKeyword_4_0() { return cLineLineKeyword_4_0; }
	}
	
	private final ProgramElements pProgram;
	private final DataElements pData;
	private final ChartElements pChart;
	private final ColElements pCol;
	private final ColorElements eColor;
	private final ChartTypeElements eChartType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ChartItGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProgram = new ProgramElements();
		this.pData = new DataElements();
		this.pChart = new ChartElements();
		this.pCol = new ColElements();
		this.eColor = new ColorElements();
		this.eChartType = new ChartTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.univcotedazurl3ia.project.ChartIt".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Program returns Program:
	//    {Program}
	//    'P' ':' name=STRING
	//    '{'
	//        'loadData' '{' loadData+=Data + ( "," loadData+=Data)*'}'
	//        'col' '{' col+=Col + ( "," col+=Col)* '}'
	//        'chart' '{' chart+=Chart +( "," chart+=Chart)*'}'
	//    '}';
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}
	
	//Data returns Data:
	//    {Data}
	//    name=STRING '(' path=STRING ')';
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//Chart returns Chart:
	//    {Chart}
	//    name=STRING '(' 'data' '=' data=[Data|STRING]',' 'type' '=' type=ChartType ',' 'col' '=' col+=[Col|STRING] (',' col+=[Col|STRING])* ',' 'backgroundColor' '=' backgroundColor=Color')' ;
	public ChartElements getChartAccess() {
		return pChart;
	}
	
	public ParserRule getChartRule() {
		return getChartAccess().getRule();
	}
	
	//Col returns Col:
	//    {Col}
	//    name=STRING '(' 'label' '=' label=STRING ',' 'color' '=' color=Color ')';
	public ColElements getColAccess() {
		return pCol;
	}
	
	public ParserRule getColRule() {
		return getColAccess().getRule();
	}
	
	//enum Color returns Color:
	//    Blue='Blue' | Red='Red' | Green='Green' | Orange='Orange' | Yellow='Yellow' | Purple='Purple' | Black='Black' | Brown='Brown' | Pink='Pink' | DarkGrey="Darkgrey" | LightGrey='LightGrey' | White='White';
	public ColorElements getColorAccess() {
		return eColor;
	}
	
	public EnumRule getColorRule() {
		return getColorAccess().getRule();
	}
	
	//enum ChartType returns ChartType:
	//    Pie = 'Pie' | Bar = 'Bar' | Area = 'Area' | Bubble = 'Bubble' | Line = 'Line';
	public ChartTypeElements getChartTypeAccess() {
		return eChartType;
	}
	
	public EnumRule getChartTypeRule() {
		return getChartTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
